[{"C:\\Users\\roy12\\chat-generator\\src\\index.js":"1","C:\\Users\\roy12\\chat-generator\\src\\component\\preview.js":"2","C:\\Users\\roy12\\chat-generator\\src\\component\\toolbar.js":"3","C:\\Users\\roy12\\chat-generator\\src\\App.js":"4","C:\\Users\\roy12\\chat-generator\\src\\reportWebVitals.js":"5","C:\\Users\\roy12\\chat-generator\\src\\component\\toolbutton.js":"6","C:\\Users\\roy12\\chat-generator\\src\\component\\wechat.js":"7","C:\\Users\\roy12\\chat-generator\\src\\component\\dialogue.js":"8"},{"size":500,"mtime":1609788802832,"results":"9","hashOfConfig":"10"},{"size":2752,"mtime":1611613188038,"results":"11","hashOfConfig":"10"},{"size":4723,"mtime":1611606657125,"results":"12","hashOfConfig":"10"},{"size":670,"mtime":1611259644312,"results":"13","hashOfConfig":"10"},{"size":362,"mtime":1609788802832,"results":"14","hashOfConfig":"10"},{"size":450,"mtime":1610485806140,"results":"15","hashOfConfig":"10"},{"size":2028,"mtime":1611606806735,"results":"16","hashOfConfig":"10"},{"size":582,"mtime":1611607275376,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xpk3ed",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"C:\\Users\\roy12\\chat-generator\\src\\index.js",[],"C:\\Users\\roy12\\chat-generator\\src\\component\\preview.js",["39"],"C:\\Users\\roy12\\chat-generator\\src\\component\\toolbar.js",["40","41","42","43"],"import React, {Component} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Toolbutton from './toolbutton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Preview from './preview';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ButtonGroup } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nclass Toolbar extends Component{\r\n     constructor(){\r\n         super()\r\n         this.state = {\r\n             receipant: \"\",\r\n             list:[],\r\n             newMessage: \"\",\r\n             radioValue: \"chatMessage-right\",\r\n             date: \"\",\r\n             id: 0\r\n         }\r\n     }\r\n\r\n     handleReceipant(value){\r\n         this.setState({receipant:value})\r\n     }\r\n\r\n     handleRadio(value){\r\n         this.setState({radioValue:value})\r\n         console.log(this.state.radioValue)\r\n     }\r\n\r\n     updateInput(key,value){\r\n        this.setState({\r\n            [key]:value\r\n        })\r\n     }\r\n\r\n     handleDate(value){\r\n       this.setState({date:value});\r\n       console.log(this.state.date);\r\n     }\r\n\r\n     addMessage(){\r\n          const newItem = {\r\n            text: this.state.newMessage,\r\n            type:this.state.radioValue,\r\n            id:this.state.id\r\n          }\r\n          const list = [...this.state.list]\r\n          if(newItem.text != \"\"){\r\n            list.push(newItem)\r\n            this.setState({\r\n              list,\r\n              id: this.state.id+1\r\n            })\r\n           // console.log(this.state.id)\r\n          }\r\n     }\r\n\r\n     deleteMessage(id){\r\n        const list = [...this.state.list];\r\n        const newList = list.filter(item => item.id !== id);\r\n        this.setState({\r\n          list:newList\r\n        })\r\n    }\r\n\r\n    render(){\r\n       return(\r\n        <React.Fragment>  \r\n        <Grid item  xs={12} sm={12} md ={3} justify =\"center\">\r\n          <Paper elevation={3} style={{paddingBottom:50,width:'100%'}}>                \r\n          <Typography variant=\"h6\">\r\n           Toolbar\r\n          </Typography>\r\n          <ButtonGroup orientation=\"vertical\">\r\n             <TextField id=\"standard-basic\" label=\"Receipant\" \r\n             onChange={e => this.handleReceipant(e.target.value)}/> \r\n             <Button onClick={e => this.addMessage()}>\r\n                 Add Messasge\r\n             </Button>\r\n             <TextField id=\"standard-basic\" label=\"Message\" multiline  rows={3} \r\n             onChange={e => this.updateInput(\"newMessage\",e.target.value)}/>\r\n                <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\r\n                <FormControlLabel\r\n                      checked={this.state.radioValue === \"chatMessage-right\"}\r\n                      value=\"chatMessage-right\"\r\n                      onChange={e => this.handleRadio(e.target.value)}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label=\"Yours\"\r\n                      labelPlacement=\"start\"\r\n                    />\r\n                    <FormControlLabel\r\n                      checked={this.state.radioValue === \"chatMessage-left\"}\r\n                      value=\"chatMessage-left\"\r\n                      onChange={e => this.handleRadio(e.target.value)}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label=\"recipient's\"\r\n                      labelPlacement=\"start\"\r\n                    />            \r\n                </RadioGroup> \r\n             <Button>\r\n                 Select image\r\n             </Button>\r\n             <Button>\r\n                 Select Wallpaper\r\n             </Button>\r\n             <Button>\r\n                 Select Your Icon\r\n             </Button>\r\n             <Button>\r\n                 Select receipant Icon\r\n             </Button>\r\n             <TextField\r\n                id=\"date\"\r\n                label=\"Date of message\"\r\n                type=\"date\"\r\n                onChange={\r\n                  e => this.handleDate(e.target.value)\r\n                }\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n           </ButtonGroup>\r\n         </Paper>  \r\n        </Grid>\r\n        <Preview receipant={this.state.receipant} messages={this.state.list} type={this.state.radioValue} date={this.state.date} delF={this.deleteMessage.bind(this)}/>\r\n       </React.Fragment>\r\n       );\r\n    }\r\n}\r\n\r\nexport default Toolbar;","C:\\Users\\roy12\\chat-generator\\src\\App.js",["44","45"],"import './App.css';\nimport Toolbar from './component/toolbar';\nimport Preview from './component/preview';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2} justify =\"center\" style={{width:'90%', margin: '0 auto',height:600}}>\n         <Grid item  xs={12}>\n           <h2 className=\"title\">\n              WeChat Message Generator\n           </h2>\n         </Grid>\n         <Grid container spacing={2}  justify =\"center\">\n            <Toolbar/>\n          </Grid>\n        \n      </Grid>\n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n\n","C:\\Users\\roy12\\chat-generator\\src\\reportWebVitals.js",[],"C:\\Users\\roy12\\chat-generator\\src\\component\\toolbutton.js",["46","47","48","49","50"],"import { ButtonGroup } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nclass Toolbutton extends Component{\r\n   \r\n    render(){\r\n       return(\r\n         <div></div>\r\n       \r\n       );\r\n    }\r\n}\r\n\r\nexport default Toolbutton;","C:\\Users\\roy12\\chat-generator\\src\\component\\wechat.js",["51","52","53"],"import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Input from '@material-ui/core/Input';\r\nimport reply_tool_add from './img/wechat-footer-image.webp';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport Dialogue from './dialogue';\r\n\r\nclass Wechat extends Component{\r\n    render(){\r\n        return(\r\n           <div className =\"wechat\">\r\n                    <div className=\"chat-header\">\r\n                         <span className=\"recipient\"> \r\n                            <ArrowBackIosIcon/>\r\n                         </span>\r\n                         <span className=\"recipient\" > \r\n                            <span className=\"name\">{this.props.receipant}</span> \r\n                         </span>\r\n                        <span className=\"dots\">&#8943;</span>\r\n                     </div>\r\n                     <div className=\"chat-content\">\r\n                        <span className=\"message-date\">{this.props.date}</span>  \r\n                        {this.props.messages.map(item => {return(<Dialogue newMessage={item.text} type={item.type} delF={this.props.delF} id={item.id}/>)})}\r\n                     </div>\r\n                      <footer>\r\n                         <i class=\"icon icon-voice\"></i>\r\n                          <input type=\"text\" class=\"text-input\"/>\r\n                          <i class=\"icon icon-face\"></i>\r\n                         <i class=\"icon icon-plus\"></i>\r\n                      </footer>\r\n                \r\n                     {/* 逃げるは恥だが役に立つ (不好的做法)\r\n                        <Paper elevation={0} style={{height:60, width:'100%',background:'inherit', position:'absolute', bottom:0}}>\r\n                            <img src= {reply_tool_add} style={{width:'100%',height:'100%',position:'relative',top:'5px'}}/>\r\n                         </Paper>\r\n                     \r\n                     */}\r\n                \r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wechat;","C:\\Users\\roy12\\chat-generator\\src\\component\\dialogue.js",["54","55"],"import React, {Component} from 'react';\r\nimport  defaultImg from './img/default-user.png';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nfunction Dialogue(props){\r\n    return(\r\n      <div className={'chatMessage '+ props.type}>\r\n         <img src= {defaultImg} className=\"avatar\"/>\r\n        <div className=\"dialogue\">\r\n           <p>{props.newMessage}</p>         \r\n        </div>\r\n        <div className=\"cancel\" onClick={() => props.delF(props.id)}><CancelIcon/></div>\r\n        {/*<img src= {defaultImg} style={{}}/>*/}\r\n     </div>\r\n    )\r\n} \r\n\r\nexport default Dialogue",{"ruleId":"56","severity":1,"message":"57","line":23,"column":19,"nodeType":"58","messageId":"59","endLine":23,"endColumn":24},{"ruleId":"56","severity":1,"message":"60","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":18},{"ruleId":"56","severity":1,"message":"61","line":13,"column":8,"nodeType":"58","messageId":"59","endLine":13,"endColumn":19},{"ruleId":"56","severity":1,"message":"62","line":14,"column":8,"nodeType":"58","messageId":"59","endLine":14,"endColumn":17},{"ruleId":"63","severity":1,"message":"64","line":56,"column":27,"nodeType":"65","messageId":"66","endLine":56,"endColumn":29},{"ruleId":"56","severity":1,"message":"67","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":15},{"ruleId":"56","severity":1,"message":"68","line":5,"column":8,"nodeType":"58","messageId":"59","endLine":5,"endColumn":18},{"ruleId":"56","severity":1,"message":"69","line":1,"column":10,"nodeType":"58","messageId":"59","endLine":1,"endColumn":21},{"ruleId":"56","severity":1,"message":"70","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":14},{"ruleId":"56","severity":1,"message":"71","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":17},{"ruleId":"56","severity":1,"message":"68","line":5,"column":8,"nodeType":"58","messageId":"59","endLine":5,"endColumn":18},{"ruleId":"56","severity":1,"message":"72","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":13},{"ruleId":"56","severity":1,"message":"72","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":13},{"ruleId":"56","severity":1,"message":"73","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":13},{"ruleId":"56","severity":1,"message":"74","line":5,"column":8,"nodeType":"58","messageId":"59","endLine":5,"endColumn":22},{"ruleId":"56","severity":1,"message":"75","line":1,"column":16,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":8,"column":10,"nodeType":"78","endLine":8,"endColumn":53},"no-unused-vars","'image' is assigned a value but never used.","Identifier","unusedVar","'Toolbutton' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Preview' is defined but never used.","'Typography' is defined but never used.","'ButtonGroup' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Paper' is defined but never used.","'Input' is defined but never used.","'reply_tool_add' is defined but never used.","'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]